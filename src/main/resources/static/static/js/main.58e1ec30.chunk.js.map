{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","Link","to","onClick","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","login","LoginRequest","console","log","localStorage","setItem","decoded","jwt_decode","logout","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","bind","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","getProject","match","params","disabled","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","project_tasks_prop","todoItems","inProgressItems","doneItems","forEach","status","ProjectBoard","getBacklog","BoardContent","length","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","dueDate","addProjectTask","UpdateProjectTask","newProjectTask","updateProjectTask","created_At","bl_id","getProjectTask","patch","Landing","classNameName","Register","createNewUser","username","fullName","password","confirmPassword","newUser","Login","loginRequest","propTypes","PropTypes","object","isRequired","func","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58e1ec30.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\n// Types for backlog actions\nexport const GET_BACKLOG = 'GET_BACKLOG';\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import axios from 'axios';\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from './types';\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post('/api/project', project);\n    history.push('/dashboard');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get('/api/project/all');\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    console.log(res);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push('/dashboard');\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      'Are you sure? This will delete the project and all the data related to it'\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteProject } from '../../actions/projectActions';\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className='container'>\n        <div className='card card-body bg-light mb-3'>\n          <div className='row'>\n            <div className='col-2'>\n              <span className='mx-auto'>{project.projectIdentifier}</span>\n            </div>\n            <div className='col-lg-6 col-md-4 col-8'>\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className='col-md-4 d-none d-lg-block'>\n              <ul className='list-group'>\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className='list-group-item board'>\n                    <i className='fa fa-flag-checkered pr-1'> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className='list-group-item update'>\n                    <i className='fa fa-edit pr-1'>Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className='list-group-item delete'\n                  onClick={() => this.onDeleteClick(project.projectIdentifier)}\n                >\n                  <i className='fa fa-minus-circle pr-1'> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to='/addProject' className='btn btn-lg btn-info'>\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from 'react';\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from 'react-redux';\nimport { getProjects } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className='projects'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-12'>\n              <h1 className='display-4 text-center'>Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from 'axios';\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setJWTToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setJWTToken from '../securityUtils/setJWTToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post('/api/users/register', newUser);\n    history.push('/login');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    console.log(LoginRequest);\n    // post Login Request\n    const res = await axios.post('/api/users/login', LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem('jwtToken', token);\n    // set our token in header\n    setJWTToken(token);\n    // decode token on React -> all the claims\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/securityActions';\n\nclass Header extends Component {\n  logout = () => {\n    this.props.logout();\n    window.location.href = '/';\n  };\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className='collapse navbar-collapse' id='mobile-nav'>\n        <ul className='navbar-nav mr-auto'>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/dashboard'>\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className='navbar-nav ml-auto'>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/dashboard'>\n              <i className='fas fa-user-circle mr-1' />\n              {user.fullname}\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/logout' onClick={this.logout}>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className='collapse navbar-collapse' id='mobile-nav'>\n        <ul className='navbar-nav ml-auto'>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/register'>\n              Sign Up\n            </Link>\n          </li>\n          <li className='nav-item'>\n            <Link className='nav-link' to='/login'>\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-4'>\n        <div className='container'>\n          <Link className='navbar-brand' to='/'>\n            Personal Project Management Tool\n          </Link>\n          <button\n            className='navbar-toggler'\n            type='button'\n            data-toggle='collapse'\n            data-target='#mobile-nav'\n          >\n            <span className='navbar-toggler-icon' />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../actions/projectActions';\nimport classnames from 'classnames';\n\nclass AddProject extends Component {\n  // 1. Check name attribute input fields\n  // 2. create constructor\n  // 3. set state\n  // 4. set value on input fields\n  // 5. create onChange function\n  // 6. set onChange on each input field\n  // 7. bind on constructor\n  // 8. check state change in the react extension\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      ...this.state\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className='project'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 m-auto'>\n                <h5 className='display-4 text-center'>Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectName\n                      })}\n                      placeholder='Project Name'\n                      name='projectName'\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className='invalid-feedback'>\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectIdentifier\n                      })}\n                      placeholder='Unique Project ID'\n                      name='projectIdentifier'\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className='invalid-feedback'>\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className='form-group'>\n                    <textarea\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.description\n                      })}\n                      placeholder='Project Description'\n                      name='description'\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className='invalid-feedback'>\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='start_date'\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='end_date'\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type='submit'\n                    className='btn btn-primary btn-block mt-4'\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createProject\n})(AddProject);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { getProject, createProject } from '../../actions/projectActions';\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: '',\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getProject(this.props.match.params.id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      ...this.state\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className='project'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 m-auto'>\n                <h5 className='display-4 text-center'>Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectName\n                      })}\n                      placeholder='Project Name'\n                      name='projectName'\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className='invalid-feedback'>\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectIdentifier\n                      })}\n                      placeholder='Unique Project ID'\n                      disabled\n                      name='projectIdentifier'\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className='invalid-feedback'>\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className='form-group'>\n                    <textarea\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.description\n                      })}\n                      placeholder='Project Description'\n                      name='description'\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className='invalid-feedback'>\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='start_date'\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className='form-group'>\n                    <input\n                      type='date'\n                      className='form-control form-control-lg'\n                      name='end_date'\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type='submit'\n                    className='btn btn-primary btn-block mt-4'\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nUpdateProject.propTypes = {\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from '../actions/types';\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n  GET_PROJECT,\n  DELETE_PROJECT\n} from '../actions/types';\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport projectReducer from './projectReducer';\nimport backlogReducer from './backlogReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n// Vanilla JavaScript, Works with browsers\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass ProjectTask extends Component {\n  onClick = (backlog_id, pt_id) => {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  };\n\n  render() {\n    const { project_task } = this.props;\n    console.log(project_task);\n    let priorityString;\n    let priorityClass;\n\n    switch (project_task.priority) {\n      case 1:\n        priorityClass = 'bg-danger text-light';\n        priorityString = 'HIGH';\n        break;\n      case 2:\n        priorityClass = 'bg-warning text-light';\n        priorityString = 'MEDIUM';\n        break;\n      case 3:\n        priorityClass = 'bg-info text-light';\n        priorityString = 'LOW';\n        break;\n    }\n\n    return (\n      <div className='card mb-1 bg-light'>\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className='card-body bg-light'>\n          <h5 className='card-title'>{project_task.summary}</h5>\n          <p className='card-text text-truncate '>\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n          >\n            <li className='btn btn-primary'>\n              <i className='fa fa-edit pr-1'>View / Update</i>\n            </li>\n          </Link>\n\n          <button\n            className='btn btn-danger ml-4'\n            onClick={() =>\n              this.onClick(\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )\n            }\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from 'axios';\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from './types';\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\n// backlog_id is the project identifier\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    history.push('/dashboard');\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    project_tasks_prop.forEach(project_task => {\n      const project = (\n        <ProjectTask key={project_task.id} project_task={project_task} />\n      );\n\n      switch (project_task.status) {\n        case 'TO_DO':\n          todoItems.push(project);\n          break;\n        case 'IN_PROGRESS':\n          inProgressItems.push(project);\n          break;\n        case 'DONE':\n          doneItems.push(project);\n          break;\n      }\n    });\n\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-secondary text-white'>\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-primary text-white'>\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className='col-md-4'>\n            <div className='card text-center mb-2'>\n              <div className='card-header bg-success text-white'>\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backlog from './Backlog';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getBacklog } from '../../actions/backlogActions';\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className='alert alert-danger text-center' role='alert'>\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className='alert alert-danger text-center' role='alert'>\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className='alert alert-info text-center' role='alert'>\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className='container'>\n        <Link to={`/addProjectTask/${id}`} className='btn btn-primary mb-3'>\n          <i className='fas fa-plus-circle'> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { addProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: '0',\n      dueDate: '',\n      projectIdentifier: id,\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    console.log(newTask);\n    this.props.addProjectTask(\n      this.props.match.params.id,\n      newTask,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const errors = this.state.errors;\n    return (\n      <div className='add-PBI'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <Link to={`/projectBoard/${id}`} className='btn btn-light'>\n                Back to Project Board\n              </Link>\n              <h4 className='display-4 text-center'>Add Project Task</h4>\n              <p className='lead text-center'>Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary\n                    })}\n                    name='summary'\n                    placeholder='Project Task summary'\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className='invalid-feedback'>{errors.summary}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.acceptanceCriteria\n                    })}\n                    placeholder='Acceptance Criteria'\n                    name='acceptanceCriteria'\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.dueDate\n                    })}\n                    name='dueDate'\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className='form-group'>\n                  <select\n                    className={classnames('form-control form-control-lg', {\n                      'is-valid': errors.priority\n                    })}\n                    name='priority'\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className='form-group'>\n                  <select\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.status\n                    })}\n                    name='status'\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=''>Select Status</option>\n                    <option value='TO_DO'>TO DO</option>\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\n                    <option value='DONE'>DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type='submit'\n                  className='btn btn-primary btn-block mt-4'\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  getProjectTask,\n  updateProjectTask\n} from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: '',\n      projectSequence: '',\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: '',\n      dueDate: '',\n      projectIdentifier: '',\n      errors: {},\n      created_At: ''\n    };\n  }\n\n  componentDidMount() {\n    const { bl_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(bl_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newProjectTask = {\n      ...this.state\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      newProjectTask,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='add-PBI'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className='btn btn-light'\n              >\n                Back to Project Board\n              </Link>\n              <h4 className='display-4 text-center'>Update Project Task</h4>\n              <p className='lead text-center'>\n                Project Name: {this.state.projectIdentifier} + Project Task ID:\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary\n                    })}\n                    name='summary'\n                    placeholder='Project Task summary'\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className='invalid-feedback'>{errors.summary}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.acceptanceCriteria\n                    })}\n                    placeholder='Acceptance Criteria'\n                    name='acceptanceCriteria'\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.dueDate\n                    })}\n                    name='dueDate'\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className='form-group'>\n                  <select\n                    className={classnames('form-control form-control-lg', {\n                      'is-valid': errors.priority\n                    })}\n                    name='priority'\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className='form-group'>\n                  <select\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.status\n                    })}\n                    name='status'\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=''>Select Status</option>\n                    <option value='TO_DO'>TO DO</option>\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\n                    <option value='DONE'>DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type='submit'\n                  className='btn btn-primary btn-block mt-4'\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  project_task: state.backlog.project_task\n});\n\nUpdateProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <div classNameName='landing'>\n        <div className='light-overlay landing-inner text-dark'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-12 text-center'>\n                <h1 className='display-3 mb-4'>\n                  Personal Project Management Tool\n                </h1>\n                <p className='lead'>\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className='btn btn-lg btn-primary mr-2' to='/register'>\n                  Sign Up\n                </Link>\n                <Link className='btn btn-lg btn-secondary mr-2' to='/login'>\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, null)(Landing);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createNewUser } from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      fullName: '',\n      password: '',\n      confirmPassword: '',\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const user = {\n      ...this.state\n    };\n    this.props.createNewUser(user, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='register'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <h1 className='display-4 text-center'>Sign Up</h1>\n              <p className='lead text-center'>Create your Account</p>\n              <form action='create-profile.html' onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.fullName\n                    })}\n                    placeholder='Full Name'\n                    name='fullName'\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className='invalid-feedback'>{errors.fullName}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='email'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.username\n                    })}\n                    placeholder='Email Address (username)'\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className='invalid-feedback'>{errors.username}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder='Password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className='invalid-feedback'>{errors.password}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.confirmPassword\n                    })}\n                    placeholder='Confirm Password'\n                    name='confirmPassword'\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className='invalid-feedback'>\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type='submit' className='btn btn-info btn-block mt-4' />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { login } from '../../actions/securityActions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n      username: '',\n      password: ''\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    console.log(login);\n    console.log(this.props.login);\n    this.props.login(loginRequest);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className='login'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 m-auto'>\n              <h1 className='display-4 text-center'>Log In</h1>\n              <form action='dashboard.html' onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='email'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.username\n                    })}\n                    placeholder='Email Address'\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className='invalid-feedback'>{errors.username}</div>\n                  )}\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder='Password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className='invalid-feedback'>{errors.password}</div>\n                  )}\n                </div>\n                <input\n                  type='submit'\n                  className='btn btn-info btn-block mt-4'\n                  onSubmit={this.onSubmit}\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nlogin.propTypes = {\n  errors: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport UpdateProject from './components/Project/UpdateProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './securityUtils/SecuredRoute';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  console.log('inside app.js');\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    // handle logout\n    store.dispatch(logout());\n    window.location.href = '/';\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Header />\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n\n          <Switch>\n            <SecuredRoute exact path='/dashboard' component={Dashboard} />\n            <SecuredRoute exact path='/addProject' component={AddProject} />\n            <SecuredRoute\n              exact\n              path='/updateProject/:id'\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path='/projectBoard/:id'\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path='/addProjectTask/:id'\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path='/updateProjectTask/:bl_id/:pt_id'\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}